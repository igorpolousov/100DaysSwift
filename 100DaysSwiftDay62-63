Day 62-63. Project 17.  Star Game. 

В сегодняшнем уроке будет сделана игра: космическая стрелялка. Летит ракета на встречу ракете молотки, мячики,  телевизоры. 

Что было сделано?
Были определены объекты которые будут появляться в игре: 
Фон игры  starField- летящие звёзды SKEmitterNode 
Игрок player- ракета SKSpriteNode
Объекты, которые будут лететь на встречу игроку - телевизор, молоток, мяч SKSpriteNode, которые были помещены в массив possibleEnemies
Надпись с количеством очков и переменная для этой надписи - SKLabelNode + score - имеет свойство обозревателя 
Надпись New Game - SKLabelNode
Надпись Game Over - SKLabelNode
Надпись trachCount + переменная spriteCount чтобы отображать количество созданных предметов - SKLabelNode. spriteCount - имеет свойство обозревателя для быстрого обновления инфо в надписи. 
Переменная gameTimer  для того чтобы задать периодичность появления объектов на поле
Переменная gameOver - для определения завершения игры

Основные параметры игры были заданы в didMove()
Положение и параметры следующих объектов:
player - задана картинка, положение на экране , параметры формы physicsBody, + contactTestBitMask
Background colour + SKEmitterNode starField 
newGame Label
Score label
trachCount label
Параметры гравитации physicsWorld.gravity = CGVector()
physicsWorld.contactDelegate = self 
Чтобы это работало было добавлено соответствие протоколу SKPhysicsContactDelegate
И был установлен gameTimer

Далее для gameTimer была создана @objc func createEnemy() в которой случайным образом выбирался объект для создания из массива possibleEnemies задавались его параметры и диапазон появления на экране. Так же задавались скорость объекта и скорость его вращения. 

Далее был задан switch в котором были заданы новые параметры скорости объекта и переменной gameTimer, чтобы при достижении определенного количества объектов скорость появления объектов и скорость объектов менялась на более быструю. 

Так же в эту функцию был добавлены параметры надписи gameOver если игра завершена. 

Следующий метод был добавлен update() поскольку объекты пролетают мимо и уходят за экран, нужно делать их удаление, был задана параметр, что если положение объекта, координата х = -300 то объект удаляется. 

И если игра не закончена то добавляется одно очко. 

Далее был задан метод touchesMoved() в котором указан диапазон движения игрока и если выходит за определенные пределы по координате y, т ограничить их. 

Следующая функция(метод), которая была добавлена это didBegin() в котором указано что будет если произойдёт контакт объекта и игрока. 

И были добавлены еще два метода touchesBegan() - чтобы задействовать надпись New Game и touchesEnded() - чтобы игрок при управлении ракетой не мог дотрагиваться до еще чего либо. 

Так же были добавлены sks файлы для звёздного неба starField и для взрыва explosion в основную папку и были добавлены картинки объектов и игрока 

Challenge:
1. Сделать так чтобы касания игрока не срабатывали нигде кроме ракеты использовать метод touchesEnded()
Добавлены условия в этот метод, что если игрок дотрагивается куда-то еще, то ракета устанавливается на первоначальную позицию
2. Сделать таймер на 1 секунду и чтобы после появления каждых 20 единиц предметов уменьшать 0.1 секунды. Нужно использовать invalidate() для gameTimer
Добавлен switch в методе createEnemy()
3. Перестать добавлять предметы после того как игрок погибнет. 
В методе crateEnemy() были добавлены условия для gameOver = true

 Ссылка на код урока: https://github.com/igorpolousov/Project17/tree/Challenge
