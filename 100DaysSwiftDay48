NSKeyedArchiver
NSKeyedUnArchiver
userDefaults
https://github.com/igorpolousov/Project12a
Day 48.  Project 12, part one. 

В этом проекте будет модернизирован проект 10. 

Будет использовано UserDefaults NSCoding NSKeyedArchiver NSKeyedUnarchiver. 

Для проекта будут созданы и использоваться два новых проекта на основе проекта 10. Это будут Project 12a  и Project12b. 

Пользователи постоянно работают с приложениями и в iOS нет кнопки сохранить. Однако данные пользователя всегда сохраняются. Чтобы сохранять данные пользователя используется UserDefaults. UserDefaults может сохранять данные любого типа. Есть ограничения по объёму данных. Если сохранять большое количество данных приложение станет медленным. 

В данном уроке Пол упоминает цифру не более 100кБ как приемлемый объём для хранения данных пользователя. 
Для примера использования UserDefaults использовался Project 12. 

В Project 12 в методе viewDidLoad были введены примеры для userDefaults. 
Далее Пол говорит о том, что нужно внимательно использовать userDefaults для получения из них информации. 

integer( forKey: )   получим integer если ключ есть иначе получим 0
bool( forKey: )  получим bool если ключ есть иначе false
Float( forKey: ) получим float если ключа нет 0.0
Double( forKey: ) получим double если ключа нет 0.0
Object( forKey: )  если используется object то получаем объект типа Any? И что бы его использовать нужно сделать conditional type casting чтобы привести объект к нужному вам типу данных. Есть два варианта: as! - make force unwrap к нужному вам типу данных и если значение ключа будет nil, то приложение прекратит работу. Если использовать as? - нужно будет сделать unwrap чтобы привести к нужному вам типу и для этого предлагается использовать nil coalescing operator ??

Далее продолжили работу с Project 12a в котором были сделаны изменения в файле Person. Class Person был сделан соответствующим протоколу NSCoding для этого нужно было добавить required init который позволяет получать данные с диска.  Были указаны строки в каким типом данных по ключу должны быть получены данные name  and image

И функция encode чтобы было можно записывать данные на диск.  Были указаны строки по какому ключу должны записываться данные на диск с именем name and image. 

Что было сделано дальше и для чего?

Далее в Project 12 была добавлена функция save() которая сохраняет данные в userDefaults при помощи NSKeyedArchiver массив people сохраняется в userDefaults с ключом people. 

Далее функция save была использована 2 раза, каждый раз после изменения данных в массиве people и перед collectionView.ReloadData()

Далее по в метод viewDidLoad() было добавлено извлечение данных из userDefaults при помощи NSKeyedUnArchiver. По ключу people были извлечены данные через type casting as? Массив с данными [Person]. Далее полученное значение присваеваем массиву people. 

Таким образом при загрузке программы получаем массив people с уже добавленными в него ранее данными если такие изменения были.   
