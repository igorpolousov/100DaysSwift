Day 75-76. Project 22. Core Location, CLBeaconRegion

  Предлагается создать очень короткое приложение, которое помогает определить положение на небольших расстояниях, например сантиметры или метры. 

  Данное приложение демонстрирует возможности для больших городов и зданий. Поскольку в современных зданиях может быть очень много этажей, то просто по gps определить положение не будет слишком полезным.  Для этого можно использовать маяки, которые по major коду покажут что вы у нужного здания и по minor коду помогут определить нужный этаж или отдел в магазине. 

Для проекта понадобится запустить приложение на телефоне и понадобится планшет с приложением Locate Beacon чтобы, используя bluetooth определять положение. 

В приложении, в зависимости от расстояния до объекта, будет меняться цвет экрана. 
- Import CoreLocation, добавить CLLocationManagerDelegate протокол к классу. 
1. В файле info.plist сделаны две записи, которые будут запрашивать у пользователя разрешение на определение местоположения всегда или только когда будет использоваться приложение. 
2. Добавили view на который поместили  label и сделал для него outlet
3. Объявили переменную для CLLocationManager
4. viewDidLoad: создан экземпляр location manager и delegate сделан на него. Так же сделан запрос пользователю на получение данных о местоположении. И сделан фон серым. 
5. Созданы 4 метода в классе. func LocationManager() - делает проверку на доступ к данным местоположения и физических возможностей устройства по сканированию. func startScanning() - заданы uuid , major, minor, identifier и запускается поиск. func update() - делает изменение цвета фона и надписи в зависимости от расстояния до маяка и найден он или нет. func locationManaager() - сделана для поиска всех маяков в районе и добавляет их в массив, если есть маяки. 


Challenges:
1. Добавить UIAlertController чтобы показать сообщение о том что найден ваш маяк. Добавить свойство boolean чтобы когда маяк будет найден, сообщение больше не показывалось. Добавлена переменная isDetected для определения было уже найдено устройство или нет. И была добавлена функция, которая показывает AlertController при условии что isDetected == false. Если маяк найден isDetected == true. Если маяк стал недоступен isDetected == false. 
2. Посмотреть еще 2-3 других маяка в приложении Locate Beacon и добавить их UUID  в своё приложение. Добавить еще один textLabel в приложение в котором будет отображаться имя маяка, который близко.  
3. Добавить круг на view, и при помощи анимации сделать так, чтобы он увеличивался или уменьшался, в зависимости от расстояния до маяка - 0.001 для unknown, 0.25 для far, 0.5 для near,1.0 для immediate. Чтобы сделать круг предлагается разместить изображение круга или добавить view со сторонами 256х256 и ,используя layer.cornerRadius to 128, сделать view круглым.  Добавлена View и задано изменение при помощи CGAffineTransform

Ссылка на урок GitHub: https://github.com/igorpolousov/Project22.Beacons/tree/Challenge
