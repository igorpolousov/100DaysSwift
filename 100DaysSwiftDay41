Day 41. MileStone project 7-9. Challenge. 


     Все иностранцы большие приколисты, хотя они и считают себя самой гуманной частью человечества, но их мысли и названия игр говорят сами за себя. 

Challenge :

    В этот день(урок) предлагается сделать самостоятельное задание. Нужно сделать игру под названием “Палач”.  Смысл игры такой: Случайным образом выбирается слово из списка слов, но пользователь не видит самого слово, а видит только количество букв в выбранном слове в виде вопросительных знаков. Пользователю дается подсказка, что это может быть за слово. И дается возможность угадать буквы в этом слове. Если буква введена правильно, то она показывается в слове, и если игрок делает семь неправильных ответов, то он проиграл. 

Подсказки автора задания:

- Строка состоит из букв. String consists of Charachters. Чтобы получить доступ к каждой букве слова, нужно просто представить слово как массив букв. 

 - Так чтобы получить цикл for letter in words , letter будет константой типа character, так если ваш массив usedLetter содержит строки вам нужно будет перевести letter в строку используя следующе способ:

let strLetter = String(letter)
 - когда из букв составлено слово, можно проверить можно использовать массив  при помощи contains() можно проверить есть ли буква в этом слове. 

1. Загрузить слова с диска
2 Получить ответ от пользователя, это должна быть только одна буква, поэтому использовать метод someString.Count
3. Для отображения слова пользователю и отображения его очков, использовать свойство title для view
4. Можно сделать два массива с использованными правильными буквами и с использованными неправильными буквами 
5. Когда игрок выиграл или проиграл показать ему соответствующее сообщение. 

Что было сделано:

UI сделан в storyBoard, были добавлены следующие элементы: ViewController and NavigationController
UILabels
wordLabel -  показывает выбранное слово в виде вопросов. Когда буква угадана, вместо вопроса показывает букву
scoreLabel -  показывает количество очков
usedLettersLabel -  надпись на экране
usedLetters -  показывает буквы, которые пользователь уже использовал
gameRules -  показывает правила игры

В коде были добавлены в методе viewDidLoad две кнопки New Game and Add Letter

В коде были

Использовалось только вертикальное положение экрана. 

Использовался один файл ViewController.

Были добавлены необходимые переменные и outlets для связи storyboard и кода. Переменная score была добавлена со свойством наблюдателя.  Нужно посмотреть как пошире можно использовать свойства наблюдателя. 

Созданы и использовались следующие функции:
loadLevel() - делает парсинг игры. Получение данных из файла и распределение данных по массивам. выбрали слово и подсказку и заменили буквы в слове знаками вопроса. Показали слово и подсказку на экране. 
addLetter() -  objc func - вызывается при нажатии кнопки add letter - вызывает alert controller с текстовым полем, в этой функции происходит проверка что введены символы в текстовые поле и происходит запуск функции submitAnswer()
newGame() - если пользователь не знает что это за слово он может нажать кнопку new game  и будет вызвана функция newgame, которая обнуляет все значения и запускает игру заново.  
submitAnswer() - производит проверку вводимого значения на корректность, не более одной буквы, чтобы не было цифры и тд. Если введено что-то некорректное, выводится сообщение об ошибке при помощи функции showMassege(). Если введена правильная буква, то добавляет букву в слово и меняет знак вопроса на эту букву
Enum Massege() -  перечисление возможных случаев когда необходимо вывести сообщение. 
showMassege() - функция в которой соотвественно перечислению указаны необходимые тексты сообщений. Вызывает alertController

Не особо понял как определять какую часть кода лучше отправлять исполняться на задний план,  поэтому отправлю ту часть, которая не связана с UI при помощи DispatchQueue.global(QoS: ).async{}


Ссылка на урок в GitHub: https://github.com/igorpolousov/HangMan-MileStone-Project-7-9
