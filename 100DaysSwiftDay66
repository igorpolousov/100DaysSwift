Day 66. Milestone project 16-18. Shooting gallery. 

Урок оказался сначала сложноват, но потом было интересно и дело пошло хорошо. 
Очень помогло то, что в swift можно просмотреть все методы класса, если кликнуть правой кнопкой мыши на названии класса и во всплывающем меню нажать jump to defenition. 

Картинки были помещены в asssets.xcassets. Звуки были добавлены в основную папку программы. 
Задание следующее. 

   1) Сделать на экране 3 строки и сделать в каждой движение целей от одного края экрана к другому. Если пользователь коснулся по цели, то сделать чтобы цель faded исчезла и игроку начислились бы очки.     
2)Сделать одни цели большими и медленными, а другие маленькими и быстрыми и сделать количество очков за маленькие большим чем за большие. 
3)Сделать “плохие” цели при попадании по которым у игрока будут списываться очки
4)Сделать движение верхней и нижней строки слева на право, а среднюю справа на лево. 
5)Добавить таймер, который будет отсчитывать от 60 и когда достигнет 0 показать game over
6)Дать пользователю 6 пуль и сделать отдельное место на экране для перезарядки. 

      Для этого были сделаны 3 вида sprites1…3. Каждый имел свою начальную точку и размер. Размер определялся в xcassets и потом при помощи метода scale. Далее был создан массив с названием картинок possibleTargets. При помощи метода run.SKaction.Move была задана точка к которой будет двигаться каждый sprite и в зависимости от типа sprite, выбранного из possibleTargets, задавалась скорость движения. Для создания спрайтов была сделана функция createTarget()  в которой описывались все свойства целей. Для запуска движения и создания спрайтов была создана переменная gameTimer ,  с типом Timer в которой была установлена периодичность создания спрайтов.  
     Для того чтобы при касании цель исчезала использовался метод SKAction.fadeOut(withDuration: 0.3) и для проигрывания звука использовался метод SKAction.playSoundFileNamed("whack.caf", waitForCompletion: false) 
Далее оба запускались при помощи sequence  
     Для подсчета и отображения очков на экране были сделаны переменные scoreLabel и score.  Первая отвечала за отображение на экране и вторая за подсчет очков. Переменная score была сделана со свойством наблюдателя. 
     Для отсчета времени на экране были добавлены две переменные timerLabel: SKLabelNode! и gameTimeCounter: Timer?.  Первая для отображения счетчика на экране , вторая для запуска таймера и отсчёта времени. 
Для подсчёта пуль была создана переменная bullets со свойством обозревателя в которой производился подсчет пуль и вторая переменная bulletsLabel для отображения счетчика на экране. 
   Так же была сделана переменная newGame: SKLabelNode, при окончании игры можно было нажать на неё и игра началась бы еще раз. Для того чтобы определить закончилась игра или нет была добавлена переменная gameOver. 
   Попадания и промахи, подсчет пуль и очков производился в методе touchesBegan. 

Ссылка на урок на Github: https://github.com/igorpolousov/ShootingGallery/tree/use_node_at
