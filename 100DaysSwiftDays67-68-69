Day 67-69. Project 19. 

JavaScript injection.  Мост между JavaScript и Swift
Для добавления  Extensions нужно пройти: file menu -> new -> target. И далее нужно выбрать iOS -> Application Extension -> Action Extension

    Что можно добавить к работе с Java Script. Это какой-то OMG WTF по сравнению с Swift.  Любая ошибка в коде в виде неправильно набранного символа приводит к тому что код не работает и ошибка “не подсвечивается”.  В проекте про Википедию текст для файла js набирался отдельно в блокноте и были использованы кавычки с русской раскладки. BOOM. Не работает.  В этом проекте ошибся и вместо a набрал i. BOOM не работает. Где искать ошибку не понятно. 
    
     При работе с JS , при появлении ошибок нужно в первую очередь проверять код связанный с JS на опечатки. 

Что было сделано:
Был создан новый проект и к этому проекту было создано расширение. Это расширение даёт возможность печатать свой код на языке JavaScript в браузере. 

Чтобы добавить Extension необходимо пройти в меню file -> new -> target -> и далее выбрать iOS -> Application Extension -> Action Extension

После того как это будет сделано, в папке приложения появится папка с именем расширения, которое было дано при создании расширения. В моём случае - это Extension 

В этой папке будет три файла: ActionViewController, MainInterface, info.plist

    В файле   ActionViewController - будет код для расширения. 
Были добавлены 2 кнопки navigation controller и были добавлены два наблюдателя для экранной клавиатуры
В этом файле был удален весь код за исключением viewDidLoad и метода done(). 
Были добавлены переменные типа String pageTitle, pageURL - строки без текста и переменная типа UITextView - script. 

Так же были добавлены необходимые константы для получения данных с сайта указанных в файле Action.js
Так же был добавлен код метода done() который получает текстовые данные из поля uiTextView. И затем передаёт их в файл Action.js

Был добавлен метод который позволяет автоматически сдвигать экран с текстом когда текст доходит до клавиатуры. 
adjustForKeyboard(notification: Notification) который принимает сообщение от ранее зарегистрированного обозревателя.
    В файле MainInterface - это файл storyBoard  - будут расположены view для расширения. 
На автоматически созданной view удалены все элементы и добавлена Text View. Для этого элемента был создан outlet с именем script.  Так же был добавлен navigation controller. 

Так же был создан пустой файл Action.js в который был добавлен код JS. В котором была создана function()

Challenge :

1. Добавить bar button item при нажатии на который пользователь сможет выбрать из уже написанных скриптов. Использовать UIAlertController и добавить скрипт который был использован на уроке. 
    Для первого и третьего заданий была добавлена левая кнопка UIAlertController которая позволяет загрузить пример скрипта, сохранить скрипт и дать ему название, загрузить ранее сохранённый скрипт. 
2. Каждый раз, как пользователь заходит на сайт, он получает url - адрес сайта. Использовать UserDefaults чтобы сохранять данные JavaScript для каждого сайта. Для этого нужно конвертировать url адрес в url объект для того чтобы использовать его в свойстве host. 
Был добавлен массив в котором хранятся скрипты согласно имени хоста
   Были добавлены 4 метода, которые позволяют сопоставить имя хоста и текст скрипта и затем сохранить это в userDefaults, и так же загрузить скрипты согласно имени хоста. 
3. Дать пользователям возможность давать название для своих скриптов и потом использовать его из UITableView
  Был добавлен массив в котором хранятся скрипты сохраненные пользователем. 
   Были добавлены два пункта в меню левой кнопки, загрузить скрипт и сохранить скрипт с указанием имени скрипта. Под эти кнопки были добавлены 4 метода в одном даётся возможность дать имя скрипту и добавить его в массив и следующий метод сохраняет его в userDefaults. Так же 2 метода для получения массива из userDefaults и для загрузки в textView


Ссылка на код урока GitHub: https://github.com/igorpolousov/Project19 
